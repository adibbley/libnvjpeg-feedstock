{% set name = "libnvjpeg" %}
{% set version = "12.3.1.117" %}
{% set cuda_version = "12.4" %}
{% set platform = "linux-x86_64" %}  # [linux64]
{% set platform = "linux-ppc64le" %}  # [ppc64le]
{% set platform = "linux-sbsa" %}  # [aarch64]
{% set platform = "windows-x86_64" %}  # [win]
{% set target_name = "x86_64-linux" %}  # [linux64]
{% set target_name = "ppc64le-linux" %}  # [ppc64le]
{% set target_name = "sbsa-linux" %}  # [aarch64]
{% set target_name = "x64" %}  # [win]
{% set extension = "tar.xz" %}  # [not win]
{% set extension = "zip" %}  # [win]

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/cuda/redist/{{ name }}/{{ platform }}/{{ name }}-{{ platform }}-{{ version }}-archive.{{ extension }}
  sha256: 9f297a160b8a934e8095c4eb2ee1674a3497e06ca6a0a7d6f2cdea983d443c96  # [linux64]
  sha256: 501efffdb76a9bbeab0bab66834dec310346a73dc16ae839854258f5b2e520fa  # [ppc64le]
  sha256: c1c2eeff199aa55b678acd59c0a76a3b44ca99f730e52becfd0373a55c2df2e3  # [aarch64]
  sha256: 63101a25268a70380a129c9b05cd5fcfe8cafaf8594b6b358a5e082ce482b679  # [win]

build:
  number: 2
  binary_relocation: false
  skip: true  # [osx]

test:
  requires:
    - patchelf  # [linux]
  files:
    - test-rpath.sh
  commands:
    - test -L $PREFIX/lib/libnvjpeg.so.{{ version.split(".")[0] }}                            # [linux]
    - test -L $PREFIX/lib/libnvjpeg.so.{{ version }}                                          # [linux]
    - test -L $PREFIX/targets/{{ target_name }}/lib/libnvjpeg.so.{{ version.split(".")[0] }}  # [linux]
    - test -f $PREFIX/targets/{{ target_name }}/lib/libnvjpeg.so.{{ version }}                # [linux]
    - bash test-rpath.sh                                                                      # [linux]
    - if not exist %LIBRARY_BIN%\nvjpeg64_{{ version.split(".")[0] }}.dll exit 1              # [win]

outputs:
  - name: libnvjpeg
    files:
      - lib/libnvjpeg.so.*            # [linux]
      - targets/{{ target_name }}/lib/libnvjpeg.so.*  # [linux]
      - Library\bin\nvjpeg*.dll       # [win]
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - {{ stdlib("c") }}
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
        - patchelf <0.18.0                      # [linux]
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    # Tests are defined at the top level, due to package/output name conflicts.
    about:
      home: https://developer.nvidia.com/nvjpeg
      license_file: LICENSE
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: nvJPEG native runtime libraries
      description: |
        nvJPEG native runtime libraries
      doc_url: https://docs.nvidia.com/cuda/nvjpeg/index.html

  - name: libnvjpeg-dev
    build:
      run_exports:
        - {{ pin_subpackage("libnvjpeg", max_pin="x") }}
    files:
      - lib/libnvjpeg.so                                  # [linux]
      - lib/pkgconfig/nvjpeg*.pc                          # [linux]
      - targets/{{ target_name }}/lib/libnvjpeg.so        # [linux]
      - targets/{{ target_name }}/lib/stubs/libnvjpeg.so  # [linux]
      - targets/{{ target_name }}/include/nvjpeg*         # [linux]
      - Library\include                                   # [win]
      - Library\lib\nvjpeg.lib                            # [win]
    requirements:
      build:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
        - {{ pin_subpackage("libnvjpeg", exact=True) }}
        - cuda-cudart-dev
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
        - libnvjpeg-static >={{ version }}      # [linux]
    test:
      commands:
        - test -L $PREFIX/lib/libnvjpeg.so                                    # [linux]
        - test -f $PREFIX/lib/pkgconfig/nvjpeg*.pc                            # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/include/nvjpeg.h          # [linux]
        - test -L $PREFIX/targets/{{ target_name }}/lib/libnvjpeg.so          # [linux]
        - test -f $PREFIX/targets/{{ target_name }}/lib/stubs/libnvjpeg.so    # [linux]
        - if not exist %LIBRARY_INC%\nvjpeg.h exit 1                          # [win]
        - if not exist %LIBRARY_LIB%\nvjpeg.lib exit 1                        # [win]
    about:
      home: https://developer.nvidia.com/cuda-toolkit
      license_file: LICENSE
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: nvJPEG native runtime libraries
      description: |
        nvJPEG native runtime libraries
      doc_url: https://docs.nvidia.com/cuda/nvjpeg/index.html

  - name: libnvjpeg-static
    build:
      skip: True  # [not linux]
    files:
      - targets/{{ target_name }}/lib/libnvjpeg_static.a  # [linux]
    requirements:
      build:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    test:
      commands:
        - test -f $PREFIX/targets/{{ target_name }}/lib/libnvjpeg_static.a  # [linux]
    about:
      home: https://developer.nvidia.com/cuda-toolkit
      license_file: LICENSE
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: nvJPEG native runtime libraries
      description: |
        nvJPEG native runtime libraries
      doc_url: https://docs.nvidia.com/cuda/nvjpeg/index.html

about:
  home: https://developer.nvidia.com/nvjpeg
  license_file: LICENSE
  license: LicenseRef-NVIDIA-End-User-License-Agreement
  license_url: https://docs.nvidia.com/cuda/eula/index.html
  summary: nvJPEG native runtime libraries
  description: |
    nvJPEG native runtime libraries
  doc_url: https://docs.nvidia.com/cuda/nvjpeg/index.html

extra:
  recipe-maintainers:
    - conda-forge/cuda
